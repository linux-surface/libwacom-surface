# Maintainer: Maximilian Luz <luzmaximilian@gmail.com>

pkgname=(
    libwacom2-surface
    libwacom2-dev-surface
    libwacom9-surface
    libwacom9-dev-surface
    libwacom-common-surface
    libwacom-bin-surface
    libwacom-surface
)
_pkgver1=1.12.1
_pkgver2=2.2.0
pkgver=2.2.0
pkgrel=2
pkgdesc="Patched libwacom for Microsoft Surface devices"
arch=('amd64')
url="https://github.com/linux-surface/libwacom"
license=('MIT')
depends=()
makedepends=(
    'meson'
    'libglib2.0-dev'
    'libgudev-1.0-dev'
    'libxml2-dev'
    'systemd'
    'udev'
)
checkdepends=(
    'python3-libevdev'
    'python3-pytest'
    'python3-pyudev'
)
validpgpkeys=('3C2C43D9447D5938EF4551EBE23B7E70B467F0BF')

source=(
    "https://github.com/linuxwacom/libwacom/releases/download/libwacom-${_pkgver1}/libwacom-${_pkgver1}.tar.bz2"{,.sig}
    "https://github.com/linuxwacom/libwacom/releases/download/libwacom-${_pkgver2}/libwacom-${_pkgver2}.tar.xz"{,.sig}
    'v1-0001-Add-support-for-BUS_VIRTUAL.patch'
    'v1-0002-Add-support-for-Intel-Management-Engine-bus.patch'
    'v1-0003-data-Add-Microsoft-Surface-pro-4.patch'
    'v1-0004-data-Add-Microsoft-Surface-pro-5.patch'
    'v1-0005-data-Add-Microsoft-Surface-pro-6.patch'
    'v1-0006-data-Add-Microsoft-Surface-pro-7.patch'
    'v1-0007-data-Add-Microsoft-Surface-Book.patch'
    'v1-0008-data-Add-Microsoft-Surface-Book-2-13.5.patch'
    'v1-0009-data-Add-Microsoft-Surface-Book-2-15.patch'
    'v1-0010-data-Add-Microsoft-Surface-Book-3-13.5.patch'
    'v1-0011-data-Add-Microsoft-Surface-Book-3-15.patch'
    'v2-0001-Add-support-for-BUS_VIRTUAL.patch'
    'v2-0002-Add-support-for-Intel-Management-Engine-bus.patch'
    'v2-0003-data-Add-Microsoft-Surface-pro-4.patch'
    'v2-0004-data-Add-Microsoft-Surface-pro-5.patch'
    'v2-0005-data-Add-Microsoft-Surface-pro-6.patch'
    'v2-0006-data-Add-Microsoft-Surface-pro-7.patch'
    'v2-0007-data-Add-Microsoft-Surface-Book.patch'
    'v2-0008-data-Add-Microsoft-Surface-Book-2-13.5.patch'
    'v2-0009-data-Add-Microsoft-Surface-Book-2-15.patch'
    'v2-0010-data-Add-Microsoft-Surface-Book-3-13.5.patch'
    'v2-0011-data-Add-Microsoft-Surface-Book-3-15.patch'
)
sha256sums=(
    '053687f64fdb1c8947cf0e54743c47bfcfba8ef3cb22466a1faa1e2c37ccb315'
    'SKIP'
    'e62ac9edb522d36ad2fa99adca35ddc02067383d4668eeaa13d7efccc30bb8c8'
    'SKIP'
    '40b6834ae423f68f68d3fbd7852aa58eafaa9adb0a29ce132f762e778954553d'
    '17a27e9f495ce0d710aa6425bb6edfa5f4123f181754f776d06c4c4fc6f53749'
    '55dc40c5ac58e977c5017ab98dea47a5e8791773aa331229e6afdf0d32d10841'
    'b6abf69199222b849a499d02eed379ef265d5576787993933978a25a9af2b5be'
    'ad7d7ae6b2deac85f6ca3b0838c5a9be28c7a535d18f2396e9a97addc214b8ec'
    'bb07abc8e74b45531721d79d4602918b301d92dc9e74201e88aefac231cb2e3c'
    'ec9f0bdbed0b136453cf571724cbae06fff2236da2bbf22b143c4d0f48756b20'
    '10ebf14c928c6074e5b08498e6155fa5f13e8c15d7d69f09f5e47b9f168d5256'
    '89225dde12a795f700d090a484a04e5da01d1d47b792bf4f7128135a70a0a66d'
    'aaab03d55d1fcfed17ea4d6de838cab3a3774d2b8ce0070bea6647d1a211401f'
    '8ff37ac6631be6851c6a521a1e852b182b4cdd6735206ab19056db8735920772'
    '40b6834ae423f68f68d3fbd7852aa58eafaa9adb0a29ce132f762e778954553d'
    '17a27e9f495ce0d710aa6425bb6edfa5f4123f181754f776d06c4c4fc6f53749'
    '55dc40c5ac58e977c5017ab98dea47a5e8791773aa331229e6afdf0d32d10841'
    'b6abf69199222b849a499d02eed379ef265d5576787993933978a25a9af2b5be'
    'ad7d7ae6b2deac85f6ca3b0838c5a9be28c7a535d18f2396e9a97addc214b8ec'
    'bb07abc8e74b45531721d79d4602918b301d92dc9e74201e88aefac231cb2e3c'
    'ec9f0bdbed0b136453cf571724cbae06fff2236da2bbf22b143c4d0f48756b20'
    '10ebf14c928c6074e5b08498e6155fa5f13e8c15d7d69f09f5e47b9f168d5256'
    '89225dde12a795f700d090a484a04e5da01d1d47b792bf4f7128135a70a0a66d'
    'aaab03d55d1fcfed17ea4d6de838cab3a3774d2b8ce0070bea6647d1a211401f'
    '8ff37ac6631be6851c6a521a1e852b182b4cdd6735206ab19056db8735920772'
)

prepare() {
    msg2 "patching libwacom-${_pkgver1}"
    cd "${srcdir}/libwacom-${_pkgver1}"
    for p in "${srcdir}/v1-"*.patch ; do
        patch -Np1 -i "${p}" || true
    done

    msg2 "patching libwacom-${_pkgver2}"
    cd "${srcdir}/libwacom-${_pkgver2}"
    for p in "${srcdir}/v2-"*.patch ; do
        patch -Np1 -i "${p}" || true
    done
}

build() {
    msg2 "build libwacom ${_pkgver1}"
    cd "${srcdir}/libwacom-${_pkgver1}"
    meson build . --prefix="/usr"
    ninja -C build

    msg2 "build libwacom ${_pkgver2}"
    cd "${srcdir}/libwacom-${_pkgver2}"
    meson build . --prefix="/usr"
    ninja -C build
}

package_libwacom2-surface() {
    depends=(
        'libglib2.0-0'
        'libgudev-1.0-0'
        'systemd'
        "libwacom-common-surface=${pkgver}-${pkgrel}"
    )
    conflicts=(
        'libwacom2'
    )
    provides=(
        "libwacom2=${_pkgver1}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver1}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/bin"
    rm -rf "${pkgdir}/usr/include"
    rm -rf "${pkgdir}/usr/lib/udev"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/pkgconfig"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/libwacom.so"
    rm -rf "${pkgdir}/usr/share"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom2-dev-surface() {
    depends=(
        'libglib2.0-dev'
        'libgudev-1.0-dev'
        "libwacom2-surface=${pkgver}-${pkgrel}"
    )
    conflicts=(
        'libwacom-dev'
        'libwacom9-dev-surface'
    )
    provides=(
        "libwacom-dev=${_pkgver1}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver1}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/bin"
    rm -rf "${pkgdir}/usr/lib/udev"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/libwacom.so."*
    rm -rf "${pkgdir}/usr/share"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom9-surface() {
    depends=(
        'libglib2.0-0'
        'libgudev-1.0-0'
        'systemd'
        "libwacom-common-surface=${pkgver}-${pkgrel}"
    )
    conflicts=(
        'libwacom9'
    )
    provides=(
        "libwacom9=${_pkgver2}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver2}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/bin"
    rm -rf "${pkgdir}/usr/include"
    rm -rf "${pkgdir}/usr/lib/udev"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/pkgconfig"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/libwacom.so"
    rm -rf "${pkgdir}/usr/share"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom9-dev-surface() {
    depends=(
        'libglib2.0-dev'
        'libgudev-1.0-dev'
        "libwacom9-surface=${pkgver}-${pkgrel}"
    )
    conflicts=(
        'libwacom-dev'
        'libwacom2-dev-surface'
    )
    provides=(
        "libwacom-dev=${_pkgver2}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver2}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/bin"
    rm -rf "${pkgdir}/usr/lib/udev"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/libwacom.so."*
    rm -rf "${pkgdir}/usr/share"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom-bin-surface() {
    depends=(
        'libglib2.0-0'
        'libgudev-1.0-0'
        'systemd'
        "libwacom9-surface=${pkgver}-${pkgrel}"
    )
    conflicts=(
        'libwacom-bin'
    )
    provides=(
        "libwacom-bin=${_pkgver2}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver2}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/include"
    rm -rf "${pkgdir}/usr/lib"
    rm -rf "${pkgdir}/usr/share/libwacom"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom-common-surface() {
    conflicts=(
        'libwacom-common'
    )
    provides=(
        "libwacom-common=${_pkgver2}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver2}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/bin"
    rm -rf "${pkgdir}/usr/include"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu"
    rm -rf "${pkgdir}/usr/share/man"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom-surface() {
    depends=(
        "libwacom2-surface=${pkgver}-${pkgrel}"
        "libwacom9-surface=${pkgver}-${pkgrel}"
        "libwacom-bin-surface=${pkgver}-${pkgrel}"
        "libwacom-common-surface=${pkgver}-${pkgrel}"
    )

    true
}
