# Maintainer: Maximilian Luz <luzmaximilian@gmail.com>

pkgname=(
    libwacom2-surface
    libwacom2-dev-surface
    libwacom9-surface
    libwacom9-dev-surface
    libwacom-common-surface
    libwacom-bin-surface
    libwacom-surface
)
_pkgver1=1.12.1
_pkgver2=2.16.1
pkgver=2.16.1
pkgrel=1
pkgdesc="Patched libwacom for Microsoft Surface devices"
arch=('amd64')
url="https://github.com/linux-surface/libwacom"
license=('MIT')
depends=()
makedepends=(
    'meson'
    'libglib2.0-dev'
    'libgudev-1.0-dev'
    'libxml2-dev'
    'libevdev-dev'
    'udev'
)
checkdepends=(
    'python3-libevdev'
    'python3-pytest'
    'python3-pyudev'
)
validpgpkeys=(
    '3C2C43D9447D5938EF4551EBE23B7E70B467F0BF'
    '594ABBA066118C7A02D10A80A8AF906D9307FBAD'
)

source=(
    "https://github.com/linuxwacom/libwacom/releases/download/libwacom-${_pkgver1}/libwacom-${_pkgver1}.tar.bz2"{,.sig}
    "https://github.com/linuxwacom/libwacom/releases/download/libwacom-${_pkgver2}/libwacom-${_pkgver2}.tar.xz"{,.sig}
    '0001-Revert-minimum-meson-version-to-v0.53.0.patch'
    'v1-0001-Add-support-for-BUS_VIRTUAL.patch'
    'v1-0002-Add-support-for-Intel-Management-Engine-bus.patch'
    'v1-0003-data-Add-Microsoft-Surface-Pro-3.patch'
    'v1-0004-data-Add-Microsoft-Surface-Pro-4.patch'
    'v1-0005-data-Add-Microsoft-Surface-Pro-5.patch'
    'v1-0006-data-Add-Microsoft-Surface-Pro-6.patch'
    'v1-0007-data-Add-Microsoft-Surface-Pro-7.patch'
    'v1-0008-data-Add-Microsoft-Surface-Pro-7.patch'
    'v1-0009-data-Add-Microsoft-Surface-Pro-8.patch'
    'v1-0010-data-Add-Microsoft-Surface-Pro-9.patch'
    'v1-0011-data-Add-Microsoft-Surface-Book.patch'
    'v1-0012-data-Add-Microsoft-Surface-Book-2-13.5.patch'
    'v1-0013-data-Add-Microsoft-Surface-Book-2-15.patch'
    'v1-0014-data-Add-Microsoft-Surface-Book-3-13.5.patch'
    'v1-0015-data-Add-Microsoft-Surface-Book-3-15.patch'
    'v1-0016-data-Add-Microsoft-Surface-Laptop-Studio.patch'
    'v2-0001-Add-support-for-BUS_VIRTUAL.patch'
    'v2-0002-Add-support-for-Intel-Management-Engine-bus.patch'
    'v2-0003-data-Add-Microsoft-Surface-Pro-3.patch'
    'v2-0004-data-Add-Microsoft-Surface-Pro-4.patch'
    'v2-0005-data-Add-Microsoft-Surface-Pro-5.patch'
    'v2-0006-data-Add-Microsoft-Surface-Pro-6.patch'
    'v2-0007-data-Add-Microsoft-Surface-Pro-7.patch'
    'v2-0008-data-Add-Microsoft-Surface-Pro-7.patch'
    'v2-0009-data-Add-Microsoft-Surface-Pro-8.patch'
    'v2-0010-data-Add-Microsoft-Surface-Pro-9.patch'
    'v2-0011-data-Add-Microsoft-Surface-Book.patch'
    'v2-0012-data-Add-Microsoft-Surface-Book-2-13.5.patch'
    'v2-0013-data-Add-Microsoft-Surface-Book-2-15.patch'
    'v2-0014-data-Add-Microsoft-Surface-Book-3-13.5.patch'
    'v2-0015-data-Add-Microsoft-Surface-Book-3-15.patch'
    'v2-0016-data-Add-Microsoft-Surface-Laptop-Studio.patch'
)
sha256sums=('053687f64fdb1c8947cf0e54743c47bfcfba8ef3cb22466a1faa1e2c37ccb315'
            'SKIP'
            '0f9bc90babad92b2c4c6571b53af3aee065f437cce01c06c860599e1a10680aa'
            'SKIP'
            'e49c00d13672c700262a3090f1dbfc785da8f827c87be78f3574718b1e28f579'
            'c504893656f851832116616e6e5bd50b3d0ac36f7288042dc7eb50e396212bc4'
            'c64275d8129ed21c58442cda159c90bea6e97813ee91e3911344dd0760a6f35c'
            '279ad2b83cc9d7ee855ee24b5fe952472483b8d4d2f8884b10a9cc12fac7256d'
            '2acccdbe30ed5a672dc1f85112a3cb2e86be1108e19e46470af328d7169602db'
            'f96e62ff26b53dd185cd2b73e42cd49771f9f54ef47e93902a77718264999d84'
            '4f24bb4ea3bf6b2a6cb543727d61d9939b43e5ecb3e693f5fc437508dafbfa05'
            'c95b22ce7e5fa87c641255aef705b3678eba63807e098bfa71bd22b36dc6fdb5'
            '5171bba9e236f7643b516ce820828bca28ab6c49d556d6097d3143d3956aae9e'
            '29216be1a22bb8b178d2cde6f8f52e9a956deffd1c4944de396ac032d46be76e'
            '277b95ed2a7569242f4d6d4943ec01e76deb2ba2b192df99955969f486985ffc'
            '200c17a8cd6891f2f8703dd99ab029e58ea7ebfd21cfdcb3d04cd0d6fdfb28eb'
            '153f01644b46e43945a0fde01278a10a7dd0bc0091f638d65a055b8c80b56040'
            '0f9f533afe2842003b676052a89ca38e894045291fae0dc74f9221f4e35af077'
            '3113ca84ad91f05a5c7f5076e3802ed6c8cd3805ea6bb8cd60c44d0cfe234ced'
            '554b6f6bd1f283094daf8911dfc288b4f88f3ae9e63cd450bb24fef89fc07d5a'
            'e780cf1f85edb37a675109574873d671ccc4e9bbac191e8f9685a4a1a79ced0c'
            'fdf94b88af82c92761030f9acd3facd49b895c36f7460bd6f3e0166164e42a17'
            '0526d5d8c73805341c5f6b393c1fcbdab85f46a0da447f065806413d30fa5b37'
            '178ea998aaa5e9cec011c1aed39335123227f6cc391a1748e9e54bee29d831c2'
            '2b4bb02727b61ba9428ad8169df713d13200152d78293f17b8222cb3488a01dc'
            '74785993808ac37236b30c5fb18c7f4b0b1f3ffe66a6fd15136ff58ebc661bd6'
            'c022132de89fb849d6528b270ee48f2847c3de4cd982727f36c58345af981aa7'
            '4a6e2ec98163fe175c9dff362bcb47e0abed3afe7f32485d5cdc8e80f23d3e12'
            '72c52c7af097791ba5129878e281cd2a696564184f10f499a16124ea7e6d856e'
            'ce124c2012e24508325a7eedd63755e658fbe173ae61cbdf0a9a9fe0709d343a'
            '1145aaba5180871bda50e50c19017b6f4ae82a8ebdd1488187d7eef631920087'
            '819ec7d8eb9d1859acdf310c007a7becb017167effacde175f276c37cb4dd873'
            'b5d4e150c20f40293b2043ef65362f29e502178d54607047bff463cfa868f9a8'
            'd2aaa55c7c961a90b77ef899f479ec38405c0c4f3cd987f00d3791814089d879'
            '5aba0d28888d9dc02049d304ab2dc5efad395e14a9b548a6cc6016a00deaf79e'
            '24936ea892a2fb6c444a4f753d6befe4d34ef78ce28eb58050823a10c17a6bf2'
            '5f41c848da767e901d79db28c2d46c39434ab965ecc01070a335f03f11361434')

prepare() {
    msg2 "patching libwacom-${_pkgver1}"
    cd "${srcdir}/libwacom-${_pkgver1}"
    patch -Np1 -i "${srcdir}/0001-Revert-minimum-meson-version-to-v0.53.0.patch" || true
    for p in "${srcdir}/v1-"*.patch ; do
        patch -Np1 -i "${p}" || true
    done

    msg2 "patching libwacom-${_pkgver2}"
    cd "${srcdir}/libwacom-${_pkgver2}"
    patch -Np1 -i "${srcdir}/0001-Revert-minimum-meson-version-to-v0.53.0.patch" || true
    for p in "${srcdir}/v2-"*.patch ; do
        patch -Np1 -i "${p}" || true
    done
}

build() {
    msg2 "build libwacom ${_pkgver1}"
    cd "${srcdir}/libwacom-${_pkgver1}"
    meson build . --prefix="/usr"
    ninja -C build

    msg2 "build libwacom ${_pkgver2}"
    cd "${srcdir}/libwacom-${_pkgver2}"
    meson build . --prefix="/usr"
    ninja -C build
}

package_libwacom2-surface() {
    depends=(
        'libglib2.0-0'
        'libgudev-1.0-0'
        'systemd'
        "libwacom-common-surface=${pkgver}-${pkgrel}"
    )
    conflicts=(
        'libwacom2'
    )
    provides=(
        "libwacom2=${_pkgver1}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver1}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/bin"
    rm -rf "${pkgdir}/usr/include"
    rm -rf "${pkgdir}/usr/lib/udev"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/pkgconfig"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/libwacom.so"
    rm -rf "${pkgdir}/usr/share"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom2-dev-surface() {
    depends=(
        'libglib2.0-dev'
        'libgudev-1.0-dev'
        "libwacom2-surface=${pkgver}-${pkgrel}"
    )
    conflicts=(
        'libwacom-dev'
        'libwacom9-dev-surface'
    )
    provides=(
        "libwacom-dev=${_pkgver1}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver1}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/bin"
    rm -rf "${pkgdir}/usr/lib/udev"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/libwacom.so."*
    rm -rf "${pkgdir}/usr/share"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom9-surface() {
    depends=(
        'libglib2.0-0'
        'libgudev-1.0-0'
        'systemd'
        "libwacom-common-surface=${pkgver}-${pkgrel}"
    )
    conflicts=(
        'libwacom9'
    )
    provides=(
        "libwacom9=${_pkgver2}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver2}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/bin"
    rm -rf "${pkgdir}/usr/include"
    rm -rf "${pkgdir}/usr/lib/udev"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/pkgconfig"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/libwacom.so"
    rm -rf "${pkgdir}/usr/share"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom9-dev-surface() {
    depends=(
        'libglib2.0-dev'
        'libgudev-1.0-dev'
        "libwacom9-surface=${pkgver}-${pkgrel}"
    )
    conflicts=(
        'libwacom-dev'
        'libwacom2-dev-surface'
    )
    provides=(
        "libwacom-dev=${_pkgver2}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver2}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/bin"
    rm -rf "${pkgdir}/usr/lib/udev"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/libwacom.so."*
    rm -rf "${pkgdir}/usr/share"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom-bin-surface() {
    depends=(
        'libglib2.0-0'
        'libgudev-1.0-0'
        'systemd'
        "libwacom9-surface=${pkgver}-${pkgrel}"
    )
    conflicts=(
        'libwacom-bin'
    )
    provides=(
        "libwacom-bin=${_pkgver2}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver2}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/include"
    rm -rf "${pkgdir}/usr/lib"
    rm -rf "${pkgdir}/usr/share/libwacom"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom-common-surface() {
    conflicts=(
        'libwacom-common'
    )
    provides=(
        "libwacom-common=${_pkgver2}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver2}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/bin"
    rm -rf "${pkgdir}/usr/include"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu"
    rm -rf "${pkgdir}/usr/share/man"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom-surface() {
    depends=(
        "libwacom2-surface=${pkgver}-${pkgrel}"
        "libwacom9-surface=${pkgver}-${pkgrel}"
        "libwacom-bin-surface=${pkgver}-${pkgrel}"
        "libwacom-common-surface=${pkgver}-${pkgrel}"
    )

    true
}
