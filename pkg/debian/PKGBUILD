# Maintainer: Maximilian Luz <luzmaximilian@gmail.com>

pkgname=(
    libwacom2-surface
    libwacom2-dev-surface
    libwacom9-surface
    libwacom9-dev-surface
    libwacom-common-surface
    libwacom-bin-surface
    libwacom-surface
)
_pkgver1=1.12.1
_pkgver2=2.6.0
pkgver=2.6.0
pkgrel=1
pkgdesc="Patched libwacom for Microsoft Surface devices"
arch=('amd64')
url="https://github.com/linux-surface/libwacom"
license=('MIT')
depends=()
makedepends=(
    'meson'
    'libglib2.0-dev'
    'libgudev-1.0-dev'
    'libxml2-dev'
    'udev'
)
checkdepends=(
    'python3-libevdev'
    'python3-pytest'
    'python3-pyudev'
)
validpgpkeys=(
    '3C2C43D9447D5938EF4551EBE23B7E70B467F0BF'
    '594ABBA066118C7A02D10A80A8AF906D9307FBAD'
)

source=(
    "https://github.com/linuxwacom/libwacom/releases/download/libwacom-${_pkgver1}/libwacom-${_pkgver1}.tar.bz2"{,.sig}
    "https://github.com/linuxwacom/libwacom/releases/download/libwacom-${_pkgver2}/libwacom-${_pkgver2}.tar.xz"{,.sig}
    'v1-0001-Add-support-for-BUS_VIRTUAL.patch'
    'v1-0002-Add-support-for-Intel-Management-Engine-bus.patch'
    'v1-0003-data-Add-Microsoft-Surface-Pro-3.patch'
    'v1-0004-data-Add-Microsoft-Surface-Pro-4.patch'
    'v1-0005-data-Add-Microsoft-Surface-Pro-5.patch'
    'v1-0006-data-Add-Microsoft-Surface-Pro-6.patch'
    'v1-0007-data-Add-Microsoft-Surface-Pro-7.patch'
    'v1-0008-data-Add-Microsoft-Surface-Book.patch'
    'v1-0009-data-Add-Microsoft-Surface-Book-2-13.5.patch'
    'v1-0010-data-Add-Microsoft-Surface-Book-2-15.patch'
    'v1-0011-data-Add-Microsoft-Surface-Book-3-13.5.patch'
    'v1-0012-data-Add-Microsoft-Surface-Book-3-15.patch'
    'v2-0001-Add-support-for-BUS_VIRTUAL.patch'
    'v2-0002-Add-support-for-Intel-Management-Engine-bus.patch'
    'v2-0003-data-Add-Microsoft-Surface-Pro-3.patch'
    'v2-0004-data-Add-Microsoft-Surface-Pro-4.patch'
    'v2-0005-data-Add-Microsoft-Surface-Pro-5.patch'
    'v2-0006-data-Add-Microsoft-Surface-Pro-6.patch'
    'v2-0007-data-Add-Microsoft-Surface-Pro-7.patch'
    'v2-0008-data-Add-Microsoft-Surface-Book.patch'
    'v2-0009-data-Add-Microsoft-Surface-Book-2-13.5.patch'
    'v2-0010-data-Add-Microsoft-Surface-Book-2-15.patch'
    'v2-0011-data-Add-Microsoft-Surface-Book-3-13.5.patch'
    'v2-0012-data-Add-Microsoft-Surface-Book-3-15.patch'
)
sha256sums=('053687f64fdb1c8947cf0e54743c47bfcfba8ef3cb22466a1faa1e2c37ccb315'
            'SKIP'
            '2376cca99475235b75053a2cfbc7ed40fd8763d5a516941a664870ff1f3aa98f'
            'SKIP'
            '1ed944ebfff70925d7b72014892a861056eb3c92d06978ba344aac9b90dba921'
            '26be090f8f4a8da4ce4729612126cc6178cbbc7dc574d240fd7d054dbd65e543'
            'a426814d21250b47e56c79e0eee53d483698700bc7f3ca0c2a0bb27ca006765b'
            'b34f34132c7ebae629db35153f7afee646e2ff15ff0251177dd81325b8525b92'
            '71780cce3983f71d62928664769e5774db76a5c7c9ef0125a9c7f484388ccad1'
            '245a4924ec297821e6ea98ac81af7ee95835556d5115b25edecc1be209f2fba0'
            'dffc98e5f30bceba817c2ad3eeb6067091b63442a892391f65875ef36337abd2'
            '23f054b3b77b7331d29ec3addb42433d2189ea0f58836257e55c38e93efa7bad'
            '776a70e00cd7855da9efd2976409cccdac2a52bed54c6210674cc4679e97ad2d'
            'bd444fa63e2c2125727ebdb8dd62119f9bcc3934c53339f7f4ebf108618ec59e'
            'ce780091102ec9cc5acf2e029bd43b2beebd1e181a9f8bed16da44f9b3ce17fe'
            '9963560ed413c5340d870c7221d7682734fa85235e3131f77076262a6962e899'
            '30f8ea4c4f6e5d0e93e746edc6c45f9f51ce5de51919bacd6dcd9d6ad45c2485'
            '37021ba70f4c721bdca081364ff966e665b44841b9ec8165fa81469dc4f3ac4b'
            'd2d63a9f88e4e902a84af6ec66658a5b9befcc66b8e62472c087ff5f724328c5'
            '0a276d6242bcc2f3baf5cca8574f24b79f0d6933ad15071c967cab6e85a0287c'
            'b2cf2ba543a90fd909f0c982edf1f2283f773d997921fdfee4e436e5ac16352e'
            '5804607b73770d9b26c2c8a8ac49d695c565c7472e4cb87e6ce6f89b6cf07b74'
            'eec88ac7eb7b618f9c2cd61df599a524155e852cb0b99fa248c8bf4efe4ed278'
            '5f9314d3d676591d9fcb3f8a37def8ce77ff4e2d55907b82143051e6d6f2b960'
            '5bae7be9cafca3f98e9dd59c3d103bc983280585044610208152cd43e6b3d78d'
            'a4226a479ff74deddf38cffda99447c18e0175fa2cfdc8b50dbd3473e1d94e2e'
            'ca7161b4991b1915e82a55e3e5f44c7ed34b52daff34062a950697755b99e97e'
            '05b88326d0ad49936412052707a9e65d31c624da299119db8d1f9bd600b4d830')

prepare() {
    msg2 "patching libwacom-${_pkgver1}"
    cd "${srcdir}/libwacom-${_pkgver1}"
    for p in "${srcdir}/v1-"*.patch ; do
        patch -Np1 -i "${p}" || true
    done

    msg2 "patching libwacom-${_pkgver2}"
    cd "${srcdir}/libwacom-${_pkgver2}"
    for p in "${srcdir}/v2-"*.patch ; do
        patch -Np1 -i "${p}" || true
    done
}

build() {
    msg2 "build libwacom ${_pkgver1}"
    cd "${srcdir}/libwacom-${_pkgver1}"
    meson build . --prefix="/usr"
    ninja -C build

    msg2 "build libwacom ${_pkgver2}"
    cd "${srcdir}/libwacom-${_pkgver2}"
    meson build . --prefix="/usr"
    ninja -C build
}

package_libwacom2-surface() {
    depends=(
        'libglib2.0-0'
        'libgudev-1.0-0'
        'systemd'
        "libwacom-common-surface=${pkgver}-${pkgrel}"
    )
    conflicts=(
        'libwacom2'
    )
    provides=(
        "libwacom2=${_pkgver1}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver1}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/bin"
    rm -rf "${pkgdir}/usr/include"
    rm -rf "${pkgdir}/usr/lib/udev"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/pkgconfig"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/libwacom.so"
    rm -rf "${pkgdir}/usr/share"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom2-dev-surface() {
    depends=(
        'libglib2.0-dev'
        'libgudev-1.0-dev'
        "libwacom2-surface=${pkgver}-${pkgrel}"
    )
    conflicts=(
        'libwacom-dev'
        'libwacom9-dev-surface'
    )
    provides=(
        "libwacom-dev=${_pkgver1}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver1}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/bin"
    rm -rf "${pkgdir}/usr/lib/udev"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/libwacom.so."*
    rm -rf "${pkgdir}/usr/share"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom9-surface() {
    depends=(
        'libglib2.0-0'
        'libgudev-1.0-0'
        'systemd'
        "libwacom-common-surface=${pkgver}-${pkgrel}"
    )
    conflicts=(
        'libwacom9'
    )
    provides=(
        "libwacom9=${_pkgver2}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver2}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/bin"
    rm -rf "${pkgdir}/usr/include"
    rm -rf "${pkgdir}/usr/lib/udev"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/pkgconfig"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/libwacom.so"
    rm -rf "${pkgdir}/usr/share"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom9-dev-surface() {
    depends=(
        'libglib2.0-dev'
        'libgudev-1.0-dev'
        "libwacom9-surface=${pkgver}-${pkgrel}"
    )
    conflicts=(
        'libwacom-dev'
        'libwacom2-dev-surface'
    )
    provides=(
        "libwacom-dev=${_pkgver2}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver2}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/bin"
    rm -rf "${pkgdir}/usr/lib/udev"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/libwacom.so."*
    rm -rf "${pkgdir}/usr/share"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom-bin-surface() {
    depends=(
        'libglib2.0-0'
        'libgudev-1.0-0'
        'systemd'
        "libwacom9-surface=${pkgver}-${pkgrel}"
    )
    conflicts=(
        'libwacom-bin'
    )
    provides=(
        "libwacom-bin=${_pkgver2}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver2}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/include"
    rm -rf "${pkgdir}/usr/lib"
    rm -rf "${pkgdir}/usr/share/libwacom"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom-common-surface() {
    conflicts=(
        'libwacom-common'
    )
    provides=(
        "libwacom-common=${_pkgver2}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver2}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/bin"
    rm -rf "${pkgdir}/usr/include"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu"
    rm -rf "${pkgdir}/usr/share/man"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom-surface() {
    depends=(
        "libwacom2-surface=${pkgver}-${pkgrel}"
        "libwacom9-surface=${pkgver}-${pkgrel}"
        "libwacom-bin-surface=${pkgver}-${pkgrel}"
        "libwacom-common-surface=${pkgver}-${pkgrel}"
    )

    true
}
