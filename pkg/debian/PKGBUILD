# Maintainer: Maximilian Luz <luzmaximilian@gmail.com>

pkgname=(
    libwacom2-surface
    libwacom2-dev-surface
    libwacom9-surface
    libwacom9-dev-surface
    libwacom-common-surface
    libwacom-bin-surface
    libwacom-surface
)
_pkgver1=1.12.1
_pkgver2=2.15.0
pkgver=2.15.0
pkgrel=1
pkgdesc="Patched libwacom for Microsoft Surface devices"
arch=('amd64')
url="https://github.com/linux-surface/libwacom"
license=('MIT')
depends=()
makedepends=(
    'meson'
    'libglib2.0-dev'
    'libgudev-1.0-dev'
    'libxml2-dev'
    'libevdev-dev'
    'udev'
)
checkdepends=(
    'python3-libevdev'
    'python3-pytest'
    'python3-pyudev'
)
validpgpkeys=(
    '3C2C43D9447D5938EF4551EBE23B7E70B467F0BF'
    '594ABBA066118C7A02D10A80A8AF906D9307FBAD'
)

source=(
    "https://github.com/linuxwacom/libwacom/releases/download/libwacom-${_pkgver1}/libwacom-${_pkgver1}.tar.bz2"{,.sig}
    "https://github.com/linuxwacom/libwacom/releases/download/libwacom-${_pkgver2}/libwacom-${_pkgver2}.tar.xz"{,.sig}
    '0001-Revert-minimum-meson-version-to-v0.53.0.patch'
    'v1-0001-Add-support-for-BUS_VIRTUAL.patch'
    'v1-0002-Add-support-for-Intel-Management-Engine-bus.patch'
    'v1-0003-data-Add-Microsoft-Surface-Pro-3.patch'
    'v1-0004-data-Add-Microsoft-Surface-Pro-4.patch'
    'v1-0005-data-Add-Microsoft-Surface-Pro-5.patch'
    'v1-0006-data-Add-Microsoft-Surface-Pro-6.patch'
    'v1-0007-data-Add-Microsoft-Surface-Pro-7.patch'
    'v1-0008-data-Add-Microsoft-Surface-Pro-7.patch'
    'v1-0009-data-Add-Microsoft-Surface-Pro-8.patch'
    'v1-0010-data-Add-Microsoft-Surface-Pro-9.patch'
    'v1-0011-data-Add-Microsoft-Surface-Book.patch'
    'v1-0012-data-Add-Microsoft-Surface-Book-2-13.5.patch'
    'v1-0013-data-Add-Microsoft-Surface-Book-2-15.patch'
    'v1-0014-data-Add-Microsoft-Surface-Book-3-13.5.patch'
    'v1-0015-data-Add-Microsoft-Surface-Book-3-15.patch'
    'v1-0016-data-Add-Microsoft-Surface-Laptop-Studio.patch'
    'v2-0001-Add-support-for-BUS_VIRTUAL.patch'
    'v2-0002-Add-support-for-Intel-Management-Engine-bus.patch'
    'v2-0003-data-Add-Microsoft-Surface-Pro-3.patch'
    'v2-0004-data-Add-Microsoft-Surface-Pro-4.patch'
    'v2-0005-data-Add-Microsoft-Surface-Pro-5.patch'
    'v2-0006-data-Add-Microsoft-Surface-Pro-6.patch'
    'v2-0007-data-Add-Microsoft-Surface-Pro-7.patch'
    'v2-0008-data-Add-Microsoft-Surface-Pro-7.patch'
    'v2-0009-data-Add-Microsoft-Surface-Pro-8.patch'
    'v2-0010-data-Add-Microsoft-Surface-Pro-9.patch'
    'v2-0011-data-Add-Microsoft-Surface-Book.patch'
    'v2-0012-data-Add-Microsoft-Surface-Book-2-13.5.patch'
    'v2-0013-data-Add-Microsoft-Surface-Book-2-15.patch'
    'v2-0014-data-Add-Microsoft-Surface-Book-3-13.5.patch'
    'v2-0015-data-Add-Microsoft-Surface-Book-3-15.patch'
    'v2-0016-data-Add-Microsoft-Surface-Laptop-Studio.patch'
)
sha256sums=('053687f64fdb1c8947cf0e54743c47bfcfba8ef3cb22466a1faa1e2c37ccb315'
            'SKIP'
            '20cd65b1693129c3a6c003db0fe7fff7eccaf19fb04e89aaad9c20eb2151515a'
            'SKIP'
            '407173c31fff8255d495ae888954f6d8a97c686efe2b120e7313e24d6963a7b5'
            'c504893656f851832116616e6e5bd50b3d0ac36f7288042dc7eb50e396212bc4'
            'c64275d8129ed21c58442cda159c90bea6e97813ee91e3911344dd0760a6f35c'
            '279ad2b83cc9d7ee855ee24b5fe952472483b8d4d2f8884b10a9cc12fac7256d'
            '2acccdbe30ed5a672dc1f85112a3cb2e86be1108e19e46470af328d7169602db'
            'f96e62ff26b53dd185cd2b73e42cd49771f9f54ef47e93902a77718264999d84'
            '4f24bb4ea3bf6b2a6cb543727d61d9939b43e5ecb3e693f5fc437508dafbfa05'
            'c95b22ce7e5fa87c641255aef705b3678eba63807e098bfa71bd22b36dc6fdb5'
            '5171bba9e236f7643b516ce820828bca28ab6c49d556d6097d3143d3956aae9e'
            '29216be1a22bb8b178d2cde6f8f52e9a956deffd1c4944de396ac032d46be76e'
            '277b95ed2a7569242f4d6d4943ec01e76deb2ba2b192df99955969f486985ffc'
            '200c17a8cd6891f2f8703dd99ab029e58ea7ebfd21cfdcb3d04cd0d6fdfb28eb'
            '153f01644b46e43945a0fde01278a10a7dd0bc0091f638d65a055b8c80b56040'
            '0f9f533afe2842003b676052a89ca38e894045291fae0dc74f9221f4e35af077'
            '3113ca84ad91f05a5c7f5076e3802ed6c8cd3805ea6bb8cd60c44d0cfe234ced'
            '554b6f6bd1f283094daf8911dfc288b4f88f3ae9e63cd450bb24fef89fc07d5a'
            'e780cf1f85edb37a675109574873d671ccc4e9bbac191e8f9685a4a1a79ced0c'
            '130ae6573afba8b8e10d93ad1472eb03dc6679c5ada83c1f152f945dcf20628f'
            '32d0dc194807625d3cd600115d5ebf68dc9fd06bb5c2762c1271e744b7efdeff'
            'c33504182e4e5e485e875aa033e0b2bc0b801193b04d1e06edc2d8bcb4bce130'
            '2fc98f9076f0eeadef92fd25f63a5aebb84e46a2242d6b1596a2ea86d71e0413'
            'b4db615431bf56deb0e3c2eb5c8bdf0561e2477a2f89070119243a91ab63c488'
            'def78a40a904620874ae215850b5014f5d3e11c6711f9aeaa810f3fdcd2d7417'
            'b18192b5a5f753ffa7362011250595d1f2040e443a67f7e51abdec8f4e30e97f'
            'cef221f124c7f247b68fafb473c9d9056fa440f774ae70ee70bc9316f7b1ccd7'
            '588474c2b84b41e0523a8cab2e2bb86445f3adf7413f25d522722ff2babfd309'
            '320fb066c06fc263d85d904a5ad21bb98a1cf1d2805cdda528f55498e0f30ef9'
            'beb9688e618bcb07825aa2afc0ee7164736daaeae611c78f2f0461b6dc268cac'
            '5a4435a76396c330265f8df7ac38d01ec9bbea27dfc937b53021feac8cb96d2e'
            '413105054c92db3855bf45e4f26861b769c4b516cea1e7a0dc5675253bad15bd'
            'a86d2c15c94229699b5712bca5d6a960883c8c1bae1f23246aba1f1d72d78b45'
            'b3d51525a0fd8e406f92691ab8312dc3493a2d158b944ff5f9037531c90eaf6e'
            'd1c07256c1d5216aed2aa061d1c5026371c7ebabf96b62cad487d4160fb1fafd')

prepare() {
    msg2 "patching libwacom-${_pkgver1}"
    cd "${srcdir}/libwacom-${_pkgver1}"
    patch -Np1 -i "${srcdir}/0001-Revert-minimum-meson-version-to-v0.53.0.patch" || true
    for p in "${srcdir}/v1-"*.patch ; do
        patch -Np1 -i "${p}" || true
    done

    msg2 "patching libwacom-${_pkgver2}"
    cd "${srcdir}/libwacom-${_pkgver2}"
    patch -Np1 -i "${srcdir}/0001-Revert-minimum-meson-version-to-v0.53.0.patch" || true
    for p in "${srcdir}/v2-"*.patch ; do
        patch -Np1 -i "${p}" || true
    done
}

build() {
    msg2 "build libwacom ${_pkgver1}"
    cd "${srcdir}/libwacom-${_pkgver1}"
    meson build . --prefix="/usr"
    ninja -C build

    msg2 "build libwacom ${_pkgver2}"
    cd "${srcdir}/libwacom-${_pkgver2}"
    meson build . --prefix="/usr"
    ninja -C build
}

package_libwacom2-surface() {
    depends=(
        'libglib2.0-0'
        'libgudev-1.0-0'
        'systemd'
        "libwacom-common-surface=${pkgver}-${pkgrel}"
    )
    conflicts=(
        'libwacom2'
    )
    provides=(
        "libwacom2=${_pkgver1}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver1}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/bin"
    rm -rf "${pkgdir}/usr/include"
    rm -rf "${pkgdir}/usr/lib/udev"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/pkgconfig"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/libwacom.so"
    rm -rf "${pkgdir}/usr/share"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom2-dev-surface() {
    depends=(
        'libglib2.0-dev'
        'libgudev-1.0-dev'
        "libwacom2-surface=${pkgver}-${pkgrel}"
    )
    conflicts=(
        'libwacom-dev'
        'libwacom9-dev-surface'
    )
    provides=(
        "libwacom-dev=${_pkgver1}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver1}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/bin"
    rm -rf "${pkgdir}/usr/lib/udev"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/libwacom.so."*
    rm -rf "${pkgdir}/usr/share"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom9-surface() {
    depends=(
        'libglib2.0-0'
        'libgudev-1.0-0'
        'systemd'
        "libwacom-common-surface=${pkgver}-${pkgrel}"
    )
    conflicts=(
        'libwacom9'
    )
    provides=(
        "libwacom9=${_pkgver2}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver2}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/bin"
    rm -rf "${pkgdir}/usr/include"
    rm -rf "${pkgdir}/usr/lib/udev"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/pkgconfig"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/libwacom.so"
    rm -rf "${pkgdir}/usr/share"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom9-dev-surface() {
    depends=(
        'libglib2.0-dev'
        'libgudev-1.0-dev'
        "libwacom9-surface=${pkgver}-${pkgrel}"
    )
    conflicts=(
        'libwacom-dev'
        'libwacom2-dev-surface'
    )
    provides=(
        "libwacom-dev=${_pkgver2}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver2}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/bin"
    rm -rf "${pkgdir}/usr/lib/udev"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/libwacom.so."*
    rm -rf "${pkgdir}/usr/share"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom-bin-surface() {
    depends=(
        'libglib2.0-0'
        'libgudev-1.0-0'
        'systemd'
        "libwacom9-surface=${pkgver}-${pkgrel}"
    )
    conflicts=(
        'libwacom-bin'
    )
    provides=(
        "libwacom-bin=${_pkgver2}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver2}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/include"
    rm -rf "${pkgdir}/usr/lib"
    rm -rf "${pkgdir}/usr/share/libwacom"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom-common-surface() {
    conflicts=(
        'libwacom-common'
    )
    provides=(
        "libwacom-common=${_pkgver2}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver2}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/bin"
    rm -rf "${pkgdir}/usr/include"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu"
    rm -rf "${pkgdir}/usr/share/man"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom-surface() {
    depends=(
        "libwacom2-surface=${pkgver}-${pkgrel}"
        "libwacom9-surface=${pkgver}-${pkgrel}"
        "libwacom-bin-surface=${pkgver}-${pkgrel}"
        "libwacom-common-surface=${pkgver}-${pkgrel}"
    )

    true
}
