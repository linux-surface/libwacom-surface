# Maintainer: Maximilian Luz <luzmaximilian@gmail.com>

pkgname=(
    libwacom2-surface
    libwacom2-dev-surface
    libwacom9-surface
    libwacom9-dev-surface
    libwacom-common-surface
    libwacom-bin-surface
    libwacom-surface
)
_pkgver1=1.12.1
_pkgver2=2.7.0
pkgver=2.7.0
pkgrel=2
pkgdesc="Patched libwacom for Microsoft Surface devices"
arch=('amd64')
url="https://github.com/linux-surface/libwacom"
license=('MIT')
depends=()
makedepends=(
    'meson'
    'libglib2.0-dev'
    'libgudev-1.0-dev'
    'libxml2-dev'
    'udev'
)
checkdepends=(
    'python3-libevdev'
    'python3-pytest'
    'python3-pyudev'
)
validpgpkeys=(
    '3C2C43D9447D5938EF4551EBE23B7E70B467F0BF'
    '594ABBA066118C7A02D10A80A8AF906D9307FBAD'
)

source=(
    "https://github.com/linuxwacom/libwacom/releases/download/libwacom-${_pkgver1}/libwacom-${_pkgver1}.tar.bz2"{,.sig}
    "https://github.com/linuxwacom/libwacom/releases/download/libwacom-${_pkgver2}/libwacom-${_pkgver2}.tar.xz"{,.sig}
    'v1-0001-Add-support-for-BUS_VIRTUAL.patch'
    'v1-0002-Add-support-for-Intel-Management-Engine-bus.patch'
    'v1-0003-data-Add-Microsoft-Surface-Pro-3.patch'
    'v1-0004-data-Add-Microsoft-Surface-Pro-4.patch'
    'v1-0005-data-Add-Microsoft-Surface-Pro-5.patch'
    'v1-0006-data-Add-Microsoft-Surface-Pro-6.patch'
    'v1-0007-data-Add-Microsoft-Surface-Pro-7.patch'
    'v1-0008-data-Add-Microsoft-Surface-Pro-7.patch'
    'v1-0009-data-Add-Microsoft-Surface-Pro-8.patch'
    'v1-0010-data-Add-Microsoft-Surface-Pro-9.patch'
    'v1-0011-data-Add-Microsoft-Surface-Book.patch'
    'v1-0012-data-Add-Microsoft-Surface-Book-2-13.5.patch'
    'v1-0013-data-Add-Microsoft-Surface-Book-2-15.patch'
    'v1-0014-data-Add-Microsoft-Surface-Book-3-13.5.patch'
    'v1-0015-data-Add-Microsoft-Surface-Book-3-15.patch'
    'v1-0016-data-Add-Microsoft-Surface-Laptop-Studio.patch'
    'v2-0001-Add-support-for-BUS_VIRTUAL.patch'
    'v2-0002-Add-support-for-Intel-Management-Engine-bus.patch'
    'v2-0003-data-Add-Microsoft-Surface-Pro-3.patch'
    'v2-0004-data-Add-Microsoft-Surface-Pro-4.patch'
    'v2-0005-data-Add-Microsoft-Surface-Pro-5.patch'
    'v2-0006-data-Add-Microsoft-Surface-Pro-6.patch'
    'v2-0007-data-Add-Microsoft-Surface-Pro-7.patch'
    'v2-0008-data-Add-Microsoft-Surface-Pro-7.patch'
    'v2-0009-data-Add-Microsoft-Surface-Pro-8.patch'
    'v2-0010-data-Add-Microsoft-Surface-Pro-9.patch'
    'v2-0011-data-Add-Microsoft-Surface-Book.patch'
    'v2-0012-data-Add-Microsoft-Surface-Book-2-13.5.patch'
    'v2-0013-data-Add-Microsoft-Surface-Book-2-15.patch'
    'v2-0014-data-Add-Microsoft-Surface-Book-3-13.5.patch'
    'v2-0015-data-Add-Microsoft-Surface-Book-3-15.patch'
    'v2-0016-data-Add-Microsoft-Surface-Laptop-Studio.patch'
)
sha256sums=('053687f64fdb1c8947cf0e54743c47bfcfba8ef3cb22466a1faa1e2c37ccb315'
            'SKIP'
            '853929bd73fba2064b12142dbbee4b3bf84509197ff46a4da559eddf62d32cdf'
            'SKIP'
            'c504893656f851832116616e6e5bd50b3d0ac36f7288042dc7eb50e396212bc4'
            'c64275d8129ed21c58442cda159c90bea6e97813ee91e3911344dd0760a6f35c'
            '279ad2b83cc9d7ee855ee24b5fe952472483b8d4d2f8884b10a9cc12fac7256d'
            '2acccdbe30ed5a672dc1f85112a3cb2e86be1108e19e46470af328d7169602db'
            'f96e62ff26b53dd185cd2b73e42cd49771f9f54ef47e93902a77718264999d84'
            '4f24bb4ea3bf6b2a6cb543727d61d9939b43e5ecb3e693f5fc437508dafbfa05'
            'c95b22ce7e5fa87c641255aef705b3678eba63807e098bfa71bd22b36dc6fdb5'
            '5171bba9e236f7643b516ce820828bca28ab6c49d556d6097d3143d3956aae9e'
            '29216be1a22bb8b178d2cde6f8f52e9a956deffd1c4944de396ac032d46be76e'
            '277b95ed2a7569242f4d6d4943ec01e76deb2ba2b192df99955969f486985ffc'
            '200c17a8cd6891f2f8703dd99ab029e58ea7ebfd21cfdcb3d04cd0d6fdfb28eb'
            '153f01644b46e43945a0fde01278a10a7dd0bc0091f638d65a055b8c80b56040'
            '0f9f533afe2842003b676052a89ca38e894045291fae0dc74f9221f4e35af077'
            '3113ca84ad91f05a5c7f5076e3802ed6c8cd3805ea6bb8cd60c44d0cfe234ced'
            '554b6f6bd1f283094daf8911dfc288b4f88f3ae9e63cd450bb24fef89fc07d5a'
            'e780cf1f85edb37a675109574873d671ccc4e9bbac191e8f9685a4a1a79ced0c'
            '4fd78cf73f4f9c39f21cb63f084bf81d4d863d4bda9fcd98ef9a5c73d4e60ca1'
            'de33c691c30e1e41d2bde9c4f1fd2c223e43929946a986c404837faf62979615'
            'bf5813eaa28fa8ec237b7bd2c97084b32d4dc2e51516e1f7c4327eb97eb91ded'
            'a03d5e2831fceb004dc1d996b5a2bc77f7635454b635acfac5269dbdc92f9fd8'
            '82216bbd183d0814a9ade1420f44eddec94a48d28ed3f70301fc030975966aac'
            'ce94a3d93c3d729a4146f97b8b74384e14df9bb99b50ce639c218b5c88798b8c'
            '4c4d3af8b63d3099b3586911a1eb9aa1c83b1d50b5de5c1f6855cf08100d1fda'
            'aa1285286eb685b2ea4f8869f5980bf85e5af15793c3c3f22fb4ddda241edba8'
            'b2dfd6becc1f0abefe57c05b6a65f1428ec37d61cb4bca0ade92a55ccdba5ba8'
            '5182fbd4e2bdd35cbc8aae2fb3786f633d4c97405aead570a00048699aa67bd9'
            'd62497be1f8bc947a14b5e1e2be9ec3ed2b94634dd99a05947cc60f2604691d7'
            '1cb35a7e0a022cc592c580bb8303a47b8e5e01d6e26cb0ac11e1b298fb540821'
            'f9662bf7db56c1754dba855d20abb1eb13f0f0862dd703106d04d386c5a01899'
            '04ca5078efaee5e9eb48dfe65dc39830bc26aebe1073250040b32defb64b2800'
            '43e7d71db1e35ef75feffd0c6e4cc1639b0f8dc542014919bb1360b496120ca0'
            '439ac1051eaf73e81d8f4b1ef02662808944eb92cd4a2fc2bb184ad376098cdd')

prepare() {
    msg2 "patching libwacom-${_pkgver1}"
    cd "${srcdir}/libwacom-${_pkgver1}"
    for p in "${srcdir}/v1-"*.patch ; do
        patch -Np1 -i "${p}" || true
    done

    msg2 "patching libwacom-${_pkgver2}"
    cd "${srcdir}/libwacom-${_pkgver2}"
    for p in "${srcdir}/v2-"*.patch ; do
        patch -Np1 -i "${p}" || true
    done
}

build() {
    msg2 "build libwacom ${_pkgver1}"
    cd "${srcdir}/libwacom-${_pkgver1}"
    meson build . --prefix="/usr"
    ninja -C build

    msg2 "build libwacom ${_pkgver2}"
    cd "${srcdir}/libwacom-${_pkgver2}"
    meson build . --prefix="/usr"
    ninja -C build
}

package_libwacom2-surface() {
    depends=(
        'libglib2.0-0'
        'libgudev-1.0-0'
        'systemd'
        "libwacom-common-surface=${pkgver}-${pkgrel}"
    )
    conflicts=(
        'libwacom2'
    )
    provides=(
        "libwacom2=${_pkgver1}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver1}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/bin"
    rm -rf "${pkgdir}/usr/include"
    rm -rf "${pkgdir}/usr/lib/udev"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/pkgconfig"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/libwacom.so"
    rm -rf "${pkgdir}/usr/share"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom2-dev-surface() {
    depends=(
        'libglib2.0-dev'
        'libgudev-1.0-dev'
        "libwacom2-surface=${pkgver}-${pkgrel}"
    )
    conflicts=(
        'libwacom-dev'
        'libwacom9-dev-surface'
    )
    provides=(
        "libwacom-dev=${_pkgver1}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver1}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/bin"
    rm -rf "${pkgdir}/usr/lib/udev"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/libwacom.so."*
    rm -rf "${pkgdir}/usr/share"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom9-surface() {
    depends=(
        'libglib2.0-0'
        'libgudev-1.0-0'
        'systemd'
        "libwacom-common-surface=${pkgver}-${pkgrel}"
    )
    conflicts=(
        'libwacom9'
    )
    provides=(
        "libwacom9=${_pkgver2}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver2}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/bin"
    rm -rf "${pkgdir}/usr/include"
    rm -rf "${pkgdir}/usr/lib/udev"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/pkgconfig"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/libwacom.so"
    rm -rf "${pkgdir}/usr/share"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom9-dev-surface() {
    depends=(
        'libglib2.0-dev'
        'libgudev-1.0-dev'
        "libwacom9-surface=${pkgver}-${pkgrel}"
    )
    conflicts=(
        'libwacom-dev'
        'libwacom2-dev-surface'
    )
    provides=(
        "libwacom-dev=${_pkgver2}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver2}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/bin"
    rm -rf "${pkgdir}/usr/lib/udev"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/libwacom.so."*
    rm -rf "${pkgdir}/usr/share"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom-bin-surface() {
    depends=(
        'libglib2.0-0'
        'libgudev-1.0-0'
        'systemd'
        "libwacom9-surface=${pkgver}-${pkgrel}"
    )
    conflicts=(
        'libwacom-bin'
    )
    provides=(
        "libwacom-bin=${_pkgver2}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver2}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/include"
    rm -rf "${pkgdir}/usr/lib"
    rm -rf "${pkgdir}/usr/share/libwacom"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom-common-surface() {
    conflicts=(
        'libwacom-common'
    )
    provides=(
        "libwacom-common=${_pkgver2}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver2}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/bin"
    rm -rf "${pkgdir}/usr/include"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu"
    rm -rf "${pkgdir}/usr/share/man"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom-surface() {
    depends=(
        "libwacom2-surface=${pkgver}-${pkgrel}"
        "libwacom9-surface=${pkgver}-${pkgrel}"
        "libwacom-bin-surface=${pkgver}-${pkgrel}"
        "libwacom-common-surface=${pkgver}-${pkgrel}"
    )

    true
}
