# Maintainer: Maximilian Luz <luzmaximilian@gmail.com>

pkgname=(
    libwacom2-surface
    libwacom2-dev-surface
    libwacom9-surface
    libwacom9-dev-surface
    libwacom-common-surface
    libwacom-bin-surface
    libwacom-surface
)
_pkgver1=1.12.1
_pkgver2=2.4.0
pkgver=2.4.0
pkgrel=1
pkgdesc="Patched libwacom for Microsoft Surface devices"
arch=('amd64')
url="https://github.com/linux-surface/libwacom"
license=('MIT')
depends=()
makedepends=(
    'meson'
    'libglib2.0-dev'
    'libgudev-1.0-dev'
    'libxml2-dev'
    'systemd'
    'udev'
)
checkdepends=(
    'python3-libevdev'
    'python3-pytest'
    'python3-pyudev'
)
validpgpkeys=('3C2C43D9447D5938EF4551EBE23B7E70B467F0BF')

source=(
    "https://github.com/linuxwacom/libwacom/releases/download/libwacom-${_pkgver1}/libwacom-${_pkgver1}.tar.bz2"{,.sig}
    "https://github.com/linuxwacom/libwacom/releases/download/libwacom-${_pkgver2}/libwacom-${_pkgver2}.tar.xz"{,.sig}
    'v1-0001-Add-support-for-BUS_VIRTUAL.patch'
    'v1-0002-Add-support-for-Intel-Management-Engine-bus.patch'
    'v1-0003-data-Add-Microsoft-Surface-Pro-3.patch'
    'v1-0004-data-Add-Microsoft-Surface-Pro-4.patch'
    'v1-0005-data-Add-Microsoft-Surface-Pro-5.patch'
    'v1-0006-data-Add-Microsoft-Surface-Pro-6.patch'
    'v1-0007-data-Add-Microsoft-Surface-Pro-7.patch'
    'v1-0008-data-Add-Microsoft-Surface-Book.patch'
    'v1-0009-data-Add-Microsoft-Surface-Book-2-13.5.patch'
    'v1-0010-data-Add-Microsoft-Surface-Book-2-15.patch'
    'v1-0011-data-Add-Microsoft-Surface-Book-3-13.5.patch'
    'v1-0012-data-Add-Microsoft-Surface-Book-3-15.patch'
    'v2-0001-Add-support-for-BUS_VIRTUAL.patch'
    'v2-0002-Add-support-for-Intel-Management-Engine-bus.patch'
    'v2-0003-data-Add-Microsoft-Surface-Pro-3.patch'
    'v2-0004-data-Add-Microsoft-Surface-Pro-4.patch'
    'v2-0005-data-Add-Microsoft-Surface-Pro-5.patch'
    'v2-0006-data-Add-Microsoft-Surface-Pro-6.patch'
    'v2-0007-data-Add-Microsoft-Surface-Pro-7.patch'
    'v2-0008-data-Add-Microsoft-Surface-Book.patch'
    'v2-0009-data-Add-Microsoft-Surface-Book-2-13.5.patch'
    'v2-0010-data-Add-Microsoft-Surface-Book-2-15.patch'
    'v2-0011-data-Add-Microsoft-Surface-Book-3-13.5.patch'
    'v2-0012-data-Add-Microsoft-Surface-Book-3-15.patch'
)
sha256sums=('053687f64fdb1c8947cf0e54743c47bfcfba8ef3cb22466a1faa1e2c37ccb315'
            'SKIP'
            'd0d022761e3f9ab23e329583b7d2bd470b0450dfb077caeb22c5a0d66c2bd414'
            'SKIP'
            '1ed944ebfff70925d7b72014892a861056eb3c92d06978ba344aac9b90dba921'
            '26be090f8f4a8da4ce4729612126cc6178cbbc7dc574d240fd7d054dbd65e543'
            'a426814d21250b47e56c79e0eee53d483698700bc7f3ca0c2a0bb27ca006765b'
            'b34f34132c7ebae629db35153f7afee646e2ff15ff0251177dd81325b8525b92'
            '71780cce3983f71d62928664769e5774db76a5c7c9ef0125a9c7f484388ccad1'
            '245a4924ec297821e6ea98ac81af7ee95835556d5115b25edecc1be209f2fba0'
            'dffc98e5f30bceba817c2ad3eeb6067091b63442a892391f65875ef36337abd2'
            '23f054b3b77b7331d29ec3addb42433d2189ea0f58836257e55c38e93efa7bad'
            '776a70e00cd7855da9efd2976409cccdac2a52bed54c6210674cc4679e97ad2d'
            'bd444fa63e2c2125727ebdb8dd62119f9bcc3934c53339f7f4ebf108618ec59e'
            'ce780091102ec9cc5acf2e029bd43b2beebd1e181a9f8bed16da44f9b3ce17fe'
            '9963560ed413c5340d870c7221d7682734fa85235e3131f77076262a6962e899'
            'c35a556533f7c05b6515b2d3cb2319e7cd16e6fb3d6db8cd8c8496b71735dfec'
            '5856fe9d9b90be0bbf2bcb549d8e9d556f35d745049ea5a47c5371d21b8d3db4'
            '003b70d83f28d090e8609cd31af8f1c31f55061af8d41b65fc469e68e68c4a9a'
            'cc5dcba04f2f5bc577e34452adee616fbe14c25a74b0afb3b8fedb5f6fcca4a9'
            '93b38899da0ec01c4b7f3867b4952c04cd8dfd2ec3fd8e434204b2dc6fb35df5'
            'c878f100f1731da4a7e856cde6c2975bae1a23dac839a80c95ce82f55415c073'
            'd2afac640d0b99bb1f4a993a74683b0b696edff155a75154c1332e46051187d3'
            '57cb891958ee8b6b087e5b396135c26538d1f4009938868dac7c45c1f1a0808b'
            '869f935219ec3bff3f7fa57fcb16dc4d75ac9ee43c780de559a50f70057f4dd2'
            '67d4af120e6c513a39af995cd3b52d2e42bde478b68897ef90c1c619a5dac66f'
            'f31afb2745ba4340c5fef1e0424da63059d9b41260d7f8963482ed89d16c7503'
            '00907868d6d14032071886961c1499981928f21f20c731b54026ccbcd1d0e59c')

prepare() {
    msg2 "patching libwacom-${_pkgver1}"
    cd "${srcdir}/libwacom-${_pkgver1}"
    for p in "${srcdir}/v1-"*.patch ; do
        patch -Np1 -i "${p}" || true
    done

    msg2 "patching libwacom-${_pkgver2}"
    cd "${srcdir}/libwacom-${_pkgver2}"
    for p in "${srcdir}/v2-"*.patch ; do
        patch -Np1 -i "${p}" || true
    done
}

build() {
    msg2 "build libwacom ${_pkgver1}"
    cd "${srcdir}/libwacom-${_pkgver1}"
    meson build . --prefix="/usr"
    ninja -C build

    msg2 "build libwacom ${_pkgver2}"
    cd "${srcdir}/libwacom-${_pkgver2}"
    meson build . --prefix="/usr"
    ninja -C build
}

package_libwacom2-surface() {
    depends=(
        'libglib2.0-0'
        'libgudev-1.0-0'
        'systemd'
        "libwacom-common-surface=${pkgver}-${pkgrel}"
    )
    conflicts=(
        'libwacom2'
    )
    provides=(
        "libwacom2=${_pkgver1}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver1}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/bin"
    rm -rf "${pkgdir}/usr/include"
    rm -rf "${pkgdir}/usr/lib/udev"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/pkgconfig"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/libwacom.so"
    rm -rf "${pkgdir}/usr/share"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom2-dev-surface() {
    depends=(
        'libglib2.0-dev'
        'libgudev-1.0-dev'
        "libwacom2-surface=${pkgver}-${pkgrel}"
    )
    conflicts=(
        'libwacom-dev'
        'libwacom9-dev-surface'
    )
    provides=(
        "libwacom-dev=${_pkgver1}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver1}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/bin"
    rm -rf "${pkgdir}/usr/lib/udev"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/libwacom.so."*
    rm -rf "${pkgdir}/usr/share"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom9-surface() {
    depends=(
        'libglib2.0-0'
        'libgudev-1.0-0'
        'systemd'
        "libwacom-common-surface=${pkgver}-${pkgrel}"
    )
    conflicts=(
        'libwacom9'
    )
    provides=(
        "libwacom9=${_pkgver2}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver2}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/bin"
    rm -rf "${pkgdir}/usr/include"
    rm -rf "${pkgdir}/usr/lib/udev"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/pkgconfig"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/libwacom.so"
    rm -rf "${pkgdir}/usr/share"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom9-dev-surface() {
    depends=(
        'libglib2.0-dev'
        'libgudev-1.0-dev'
        "libwacom9-surface=${pkgver}-${pkgrel}"
    )
    conflicts=(
        'libwacom-dev'
        'libwacom2-dev-surface'
    )
    provides=(
        "libwacom-dev=${_pkgver2}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver2}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/bin"
    rm -rf "${pkgdir}/usr/lib/udev"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu/libwacom.so."*
    rm -rf "${pkgdir}/usr/share"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom-bin-surface() {
    depends=(
        'libglib2.0-0'
        'libgudev-1.0-0'
        'systemd'
        "libwacom9-surface=${pkgver}-${pkgrel}"
    )
    conflicts=(
        'libwacom-bin'
    )
    provides=(
        "libwacom-bin=${_pkgver2}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver2}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/include"
    rm -rf "${pkgdir}/usr/lib"
    rm -rf "${pkgdir}/usr/share/libwacom"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom-common-surface() {
    conflicts=(
        'libwacom-common'
    )
    provides=(
        "libwacom-common=${_pkgver2}-${pkgrel}"
    )

    cd "${srcdir}/libwacom-${_pkgver2}"

    # install everything
    DESTDIR="${pkgdir}" ninja install -C build

    # remove stuff that doesn't go in this package
    rm -rf "${pkgdir}/usr/bin"
    rm -rf "${pkgdir}/usr/include"
    rm -rf "${pkgdir}/usr/lib/x86_64-linux-gnu"
    rm -rf "${pkgdir}/usr/share/man"

    # copy license
    install -D -m644 "COPYING" "${pkgdir}/usr/share/doc/${pkgname}/copyright"
}

package_libwacom-surface() {
    depends=(
        "libwacom2-surface=${pkgver}-${pkgrel}"
        "libwacom9-surface=${pkgver}-${pkgrel}"
        "libwacom-bin-surface=${pkgver}-${pkgrel}"
        "libwacom-common-surface=${pkgver}-${pkgrel}"
    )

    true
}
